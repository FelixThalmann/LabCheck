version: '3.7'

services:
  postgres:
    image: postgres:15
    container_name: labcheck_postgres
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - "5432:5432"
    volumes:
      - ./data/postgres:/var/lib/postgresql/data
    restart: unless-stopped
    networks:
      - labcheck_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 5s
      timeout: 5s
      retries: 5

  mqtt:
    image: eclipse-mosquitto:2.0
    container_name: labcheck_mosquitto
    restart: unless-stopped
    ports:
      - "1883:1883" # Standard MQTT Port
      - "9001:9001" # Port for MQTT over WebSockets
    volumes:
      - ./data/mosquitto/config:/mosquitto/config
      - ./data/mosquitto/data:/mosquitto/data
      - ./data/mosquitto/log:/mosquitto/log
    networks:
      - labcheck_network

  prediction:
    build: ./prediction-service
    container_name: labcheck_prediction
    ports:
      - "${PORT_PREDICTION}:${PORT_PREDICTION}"
    environment:
      - DATABASE_URL=${DATABASE_URL}
      - DEBUG_PREDICTION=${DEBUG_PREDICTION}
      - STATIC_API_KEY=${STATIC_API_KEY}
      - TRAINING_INTERVAL=${TRAINING_INTERVAL}
    depends_on:
      - postgres
    restart: unless-stopped
    volumes:
      - ./prediction-service/models:/usr/src/app/models
    networks:
      - labcheck_network

  backend:
   build:
     context: ./backend
     dockerfile: Dockerfile
     target: production
   container_name: labcheck_backend
   environment:
     - DATABASE_URL=${DATABASE_URL}
     - MQTT_BROKER_URL=${MQTT_BROKER_URL}
     - PORT=${PORT_BACKEND}
     - STATIC_API_KEY=${STATIC_API_KEY}
   ports:
     - "${PORT_BACKEND}:${PORT_BACKEND}"
   depends_on:
     postgres:
       condition: service_healthy
     mqtt:
       condition: service_started
   restart: unless-stopped
   networks:
     - labcheck_network
   command: >
     sh -c "npx prisma migrate deploy &&
            node dist/src/main"

networks:
  labcheck_network:
    driver: bridge 