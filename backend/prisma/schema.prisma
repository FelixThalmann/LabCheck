generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// Room model for better organization and scalability
model Room {
  id          String   @id @default(cuid())
  name        String   @unique 
  description String? 
  capacity    Int      @default(20) 
  isOpen      Boolean  @default(true) 
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  maxCapacity Int      @default(20) 
  entranceDirection String? @default("left") // "left", "right"

  sensors     Sensor[]
  dayPredictions  DayPrediction[]
  weekPredictions WeekPrediction[]
  events         Event[] 
  @@map("rooms")
}

model Sensor {
  id        String   @id @default(cuid())
  esp32Id   String   @unique // Unique ID of the ESP32 board
  location  String?  // Specific position within the room, e.g. "North Door", "East Entrance"
  sensorType String  @default("multi") // "door", "motion", "passage", "light_barrier", "multi"
  isActive  Boolean  @default(true) // Whether the sensor is active
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // Relationship to room
  room   Room?   @relation(fields: [roomId], references: [id])
  roomId String?

  // Existing event relationship
  events         Event[] 

  @@map("sensors")
}

enum EventType {
  DOOR_EVENT
  PASSAGE_EVENT
  TEST_EVENT
}

model Event {
  id          Int      @id @default(autoincrement())
  timestamp   DateTime @default(now())
  personCount Int
  isDoorOpen  Boolean
  eventType   EventType
  sensor      Sensor @relation(fields: [sensorId], references: [id], onDelete: Cascade)
  sensorId    String
  room        Room?   @relation(fields: [roomId], references: [id], onDelete: Cascade)
  roomId      String?

  @@map("events")
}

// Daily predictions
model DayPrediction {
  id          String   @id @default(cuid())
  time        String   // "8 AM", "10 AM", "12 PM", "2 PM", "4 PM", "6 PM"
  occupancy   Int      @default(0)
  color       String   // "green", "yellow", "red"
  date        DateTime @db.Date // Date for which the prediction applies
  confidence  Float?   @default(0.0) // Confidence of the prediction (0.0 - 1.0)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  // Relationship to room
  room   Room   @relation(fields: [roomId], references: [id], onDelete: Cascade)
  roomId String

  @@unique([roomId, date, time])
  @@map("day_predictions")
}

// Weekly predictions
model WeekPrediction {
  id          String   @id @default(cuid())
  day         String   // "Mon", "Tue", "Wed", "Thu", "Fri"
  occupancy   Int      @default(0)
  color       String   // "green", "yellow", "red"
  weekStart   DateTime @db.Date // Monday of the week (for uniqueness)
  confidence  Float?   @default(0.0) // Confidence of the prediction (0.0 - 1.0)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  // Relationship to room
  room   Room   @relation(fields: [roomId], references: [id], onDelete: Cascade)
  roomId String

  @@unique([roomId, weekStart, day])
  @@map("week_predictions")
}
